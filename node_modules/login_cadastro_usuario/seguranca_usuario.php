<?php
/* php.ini
session.cookie_httponly=1;
session.cookie_secure=1;
session.use_only_cookies=1; */

require_once '../login_cadastro_usuario/conexao.php';

define('TEXT_SEGURANCA', 'W4r/N0Mor3Trouble@&St0pWar@');

if(!isset($marcaTempoCache)) {
    session_cache_expire(10);
    $marcaTempoCache = session_cache_expire();
}else {
    session_cache_expire($marcaTempoCache);
}
        
session_start();


// aqui renova o id da sessa caso tenha passado o tempo
if($marcaTempoCache <= 3) {
    session_regenerate_id();
    /*
     * ainda vou modificar essa renovacao de sessao
     */
}

// cria um token de sessao
$tokenSessao = hash('sha512', $_SERVER['REMOTE_ADDR'].$_SERVER['HTTP_USER_AGENT'].TEXT_SEGURANCA.session_id());

/* verifica se existe algum token da sessao existe
 * caso exista, ele verifica se Ã© igual ao da sessao existente
 */
if(isset($_SESSION['logado']) && $_SESSION['logado']) {
    
    try {
        $con = getConexao();
        if($con === null) {
            header('Location: ./pagefound.php');
        }
        $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $sql_verifica_token = 'SELECT token_session FROM cliente WHERE id = (SELECT id FROM cliente WHERE email = :email);';

        $stmt = $con->prepare($sql_verifica_token);

        $stmt->bindParam(':email', $_SESSION['email']);

        if($stmt->execute()) {
            $result = $stmt->fetchAll(PDO::FETCH_ASSOC);

            $token_usuario = $result[0]['token_session'];

            if(!hash_equals($tokenSessao, $token_usuario)) {
                header('Location: ./logout_usuario.php');
            }
            $con = null;
        }else {
            $con = null;
            header('Location: ./logout_usuario.php');
        }

    } catch (PDOException $ex) {
        echo $e->getCode(); echo $e->getMessage();
    }

}else if(isset($token_usuario)) {
    $_SESSION['logado'] = false;
    unset($tokenSessao);    
}
