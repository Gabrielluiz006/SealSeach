<?php
require_once './recaptchalib.php';
require_once './seguranca_usuario.php';

// definir a chave secreta
$secret = "6LeaQJUUAAAAAF929oqAUZGJfA6H2jyHF5hRugec";

// verificar a chave secreta
$response = null;
$reCaptcha = new ReCaptcha($secret);


if ($_POST["g-recaptcha-response"]) {
    $response = $reCaptcha->verifyResponse($_SERVER["REMOTE_ADDR"], $_POST["g-recaptcha-response"]);
}

// deu tudo certo?
if ($response != null && $response->success) {
    // processar o formulario

require_once './conexao.php';

try {
    $con = getConexao();
    /* verifica se existe algum problema de conexao, caso exista, redireciona para pagefound
     * evitando assim, mostrar os diretorios da pasta
     */
    if($con === null) {
        header('Location: ./pagefound.php');
    }
    $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // verifica se as variaveis globais tem algum valor
    $login = filter_input(INPUT_POST, 'login', FILTER_SANITIZE_STRING);
    $email = filter_input(INPUT_POST, 'email-login', FILTER_VALIDATE_EMAIL);
    $senha = filter_input(INPUT_POST, 'senha-login', FILTER_SANITIZE_SPECIAL_CHARS);
    
    // codigo para logar
    if(isset($email,$senha,$login) && $email != '' && $senha != ''){
        // busca no banco os dados com base no email
        $sql = 'SELECT nome,cpf,email,senha,data_nascimento,hash_master FROM cliente WHERE id = (SELECT id FROM cliente WHERE email = :email);';
        
        // prepara sql
        $stmt = $con->prepare($sql);
        
        $stmt->bindParam(':email', $email);
           
            if($stmt->execute()) {
                $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
                
                // pego o hash master
                $hash = $result[0]['hash_master'];
                
                $senha = hash('sha512', $senha.$hash);
                
                // hash_equals agora para verificar se senha do banco é igual a que o usuario mandou
                if(($stmt->rowCount() === 6 || count($result[0]) === 6) && hash_equals($result[0]['senha'], $senha)) {
                    foreach ($result as $value) {
                        $_SESSION['nome'] = $value['nome'];
                        $_SESSION['cpf'] = $value['cpf'];
                        $_SESSION['email'] = $value['email'];
                        $_SESSION['dataNasc'] = $value['data_nascimento'];
                    }
                    // gera um novo id de sessao quando logar
                    session_regenerate_id();
                    $_SESSION['tokenUsuarioLogado'] = hash('sha512', $_SERVER['REMOTE_ADDR'].$_SERVER['HTTP_USER_AGENT'].TEXT_SEGURANCA.session_id());
                    unset($_SESSION['msgLoginFalha']);
                    unset($senha);
                    $con = null;
                    header('Location: ../PP1_FRONT/Perfil.php');
                    
                }else {
                    // caso a senha esteja errada
                    $_SESSION['msgLoginFalha'] = "* Email e/ou senha incorretos";
                    unset($senha);
                    $con = null;
                    header('Location: ../PP1_FRONT/'.$_SESSION['urlRequest']);
                }
                
            }else {
                // caso o execute() falhe
                $_SESSION['msgLoginFalha'] = "* Email e/ou senha incorretos";
                unset($senha);
                $con = null;
                header('Location: ../PP1_FRONT/'.$_SESSION['urlRequest']);
            }

        }else {
            // caso algumas das variaveis nao tenha valor
            $_SESSION['msgLoginFalha'] = "* Email e/ou senha incorretos";
            unset($senha);
            $con = null;
            header('Location: ../PP1_FRONT/'.$_SESSION['urlRequest']);
        }
} catch (PDOException $e) {
    echo $e->getCode(); echo $e->getMessage();
}

}else {
    $_SESSION['msgLoginFalha'] = "* Recaptcha não foi marcado";
    unset($_POST);
    header('Location: ../PP1_FRONT/'.$_SESSION['urlRequest']);
}