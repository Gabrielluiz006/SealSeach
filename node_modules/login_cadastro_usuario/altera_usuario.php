<?php
require_once './seguranca_usuario.php';
require_once './conexao.php';

try {
    $con = getConexao();
    /* verifica se existe algum problema de conexao, caso exista, redireciona para pagefound
     * evitando assim, mostrar os diretorios da pasta
     */
    if($con === null) {
        header('Location: ./pagefound.php');
    }
    $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    /* verificar e limpar os dados enviados pelo usuario */
    $alterar = filter_input(INPUT_POST, 'alterar', FILTER_SANITIZE_SPECIAL_CHARS);
    
    $alteraNome = filter_input(INPUT_POST, 'altera-nome', FILTER_SANITIZE_SPECIAL_CHARS);
    $alteraEmail = filter_input(INPUT_POST, 'altera-email', FILTER_VALIDATE_EMAIL);
    
    // senha antiga e nova
    $alteraSenhaAntiga = filter_input(INPUT_POST, 'altera-senhaAntiga', FILTER_SANITIZE_SPECIAL_CHARS);
    $alteraSenhaNova = filter_input(INPUT_POST, 'altera-senhaNova', FILTER_SANITIZE_SPECIAL_CHARS);
    
    $alteraCpf = filter_input(INPUT_POST, 'altera-cpf', FILTER_SANITIZE_SPECIAL_CHARS);
    $alteraDataNasc = filter_input(INPUT_POST, 'altera-dataNasc', FILTER_SANITIZE_SPECIAL_CHARS);
    
    // codigo para ver se o usuario existe no banco e atualizar
    if(isset($alterar,$alteraNome,$alteraEmail,$alteraSenhaAntiga,$alteraCpf)) {
        /*
         * Vai verificar antes de tudo se a senha que o usuario informou está correta
         * para só depois atualizar os dados do usuario
         */
        $sql_verificar_senha_antiga = 'SELECT id,hash_master,senha FROM cliente WHERE id = (SELECT id FROM cliente WHERE cpf = :cpf);';
        $qtdParamSql = 3;
        
        $stmt = $con->prepare($sql_verificar_senha_antiga);
        
        $stmt->bindParam(':cpf', $alteraCpf);
        
        // verifica se o usuario exista
        if($stmt->execute()) {
            $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            $idCliente = $result[0]['id'];
            $hash = $result[0]['hash_master'];
            $alteraSenhaAntiga = hash('sha512', $alteraSenhaAntiga.$hash);
            
            // verifica se a senha passada é a correta
            if(($stmt->rowCount() === $qtdParamSql || count($result[0] === $qtdParamSql)) && hash_equals($result[0]['senha'], $alteraSenhaAntiga)) {
                // preparando o sql
                $sql = 'UPDATE cliente SET nome = :nome, email = :email , senha = :senha, data_nascimento = :data_nasc WHERE id = :id';
                
                $stmt = $con->prepare($sql);
                
                $stmt->bindParam(':id', $idCliente);
                
                /*
                 * caso algum dos valores do formulario esteja vazio
                 * serao usados os valores originais, evitando assim
                 * que altere algum dado para um valor vazio
                 */
                
                $alteraNome = (empty($alteraNome)) ? $alteraNome : $_SESSION['nome'];
                $stmt->bindParam(':nome', $alteraNome);
                
                $alteraEmail = (empty($alteraEmail)) ? $alteraEmail : $_SESSION['email'];
                $stmt->bindParam(':email', $alteraEmail);
                unset($_SESSION['email']);
                
                $alteraSenhaNova = ($alteraSenhaNova != '') ? hash('sha512', $alteraSenhaNova.$hash) : $alteraSenhaAntiga;
                $stmt->bindParam(':senha', $alteraSenhaNova);
                
                $alteraDataNasc = (empty($alteraDataNasc)) ? $alteraDataNasc : $_SESSION['dataNasc'];
                $stmt->bindParam(':data_nasc', $alteraDataNasc);
                
                // tenta atualizar
                if($stmt->execute()) {
                    // caso consiga, ja atualiza o perfil
                    $sql_att_dados = 'SELECT nome,email,data_nascimento FROM cliente WHERE id = :id';
                    
                    $stmt = $con->prepare($sql_att_dados);
                    $stmt->bindParam(':id', $idCliente);
                    $stmt->execute();
                    
                    $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
                    
                    foreach ($result as $value) {;
                        $_SESSION['nome'] = $value['nome'];
                        $_SESSION['email'] = $value['email'];
                        $_SESSION['dataNasc'] = $value['data_nascimento'];
                    }
                    unset($alteraSenhaAntiga);
                    unset($alteraSenhaNova);
                    $con = null;
                    header('Location: ../PP1_FRONT/Perfil.php');
                    
                }else {
                    // caso nao consiga da update por algum motivo
                    $_SESSION['msgDeVerificacao'] = '* Não foi possível alterar';
                    unset($alteraSenhaAntiga);
                    unset($alteraSenhaNova);
                    $con = null;
                    header('Location: ../PP1_FRONT/Alterar.php');
                }
                
            }else {
                // caso a senha esteja errada
                $_SESSION['msgDeVerificacaoSenha'] = '* Senha incorreta';
                unset($alteraSenhaAntiga);
                unset($alteraSenhaNova);
                $con = null;
                header('Location: ../PP1_FRONT/Alterar.php');
            }
        }else {
            // caso nao encontre o usuario no banco ele desloga o mesmo
            $_SESSION['msgDeVerificacao'] = '* Não foi possível alterar';
            unset($alteraSenhaAntiga);
            unset($alteraSenhaNova);
            $con = null;
            header('Location: ./logout_usuario.php');
        }
        
    }else {
        // caso falte algum input nao tenha sido validado ou passado
        unset($alteraSenhaAntiga);
        unset($alteraSenhaNova);
        $con = null;
        header('Location: ./altera_usuario.php');
    }
    
} catch (PDOException $ex) {
    echo $ex->getCode(); echo $ex->getMessage();
}